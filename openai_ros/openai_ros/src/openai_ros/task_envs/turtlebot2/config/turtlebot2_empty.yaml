turtlebot2: #namespace
    #######################################
    n_movements: 3  # forward, left, right, backward, stop **do not change
    n_linear_velocity: 5  # (linear_forward_speed/n_linear_velocity)
    n_angular_velocity: 3
    #######################################

    n_actions: 3 # We have 3 actions, Forwards,TurnLeft,TurnRight,Backwards
    n_observations: 6 # We have 6 different observations

    speed_step: 1.0 # Time to wait in the reset phases

    #######################################
    leader_linear_forward_speed: 0.15
    leader_linear_turn_speed: 0.0
    #######################################

    linear_forward_speed: 0.3 #0.5 # Speed for going fowards
    linear_turn_speed: 0.1 #0.05 # Linear speed when turning
    angular_speed: 0.5 #0.3 # Angular speed when turning Left or Right
    init_linear_forward_speed: 0.0 # Initial linear speed in which we start each episode
    init_linear_turn_speed: 0.0 # Initial angular speed in shich we start each episode
    
    new_ranges: 5 # How many laser readings we jump in each observation reading, the bigger the less laser resolution
    min_range: 0.5 # Minimum meters below wich we consider we have crashed
    max_laser_value: 6 # Value considered Ok, no wall
    min_laser_value: 0 # Value considered there is an obstacle or crashed
    
    desired_pose: # leader's goal pose
      x: 5.0
      y: 0.0
      z: 0.0

    desired_distance: # distance the follower has to remain
      x: 1.0
      y: 0.5
      z: 0.0

    forwards_reward: 5 #5 # Points Given to go forwards
    turn_reward: 1 # Points Given to turn as action
    end_episode_points: 100 # Points given when ending an episode

    distance_reward: 5
    velocity_reward: 1
    orientation_reward: 1

    #TODO
    #distance_rewward (euclidean distance)
    #orientation_reward
    #velocity_reward (might have to be depending on the distance)

    

